// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Protects a GitHub branch.
//
// This resource allows you to configure branch protection for repositories in your organization. When applied, the branch will be protected from forced pushes and deletion. Additional constraints, such as required status checks or restrictions on users, teams, and apps, can also be configured.
type BranchProtection struct {
	pulumi.CustomResourceState

	// The Git branch to protect.
	Branch pulumi.StringOutput `pulumi:"branch"`
	// Boolean, setting this to `true` enforces status checks for repository administrators.
	EnforceAdmins pulumi.BoolPtrOutput `pulumi:"enforceAdmins"`
	Etag          pulumi.StringOutput  `pulumi:"etag"`
	// The GitHub repository name.
	Repository pulumi.StringOutput `pulumi:"repository"`
	// Boolean, setting this to `true` requires all commits to be signed with GPG.
	RequireSignedCommits pulumi.BoolPtrOutput `pulumi:"requireSignedCommits"`
	// Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
	RequiredPullRequestReviews BranchProtectionRequiredPullRequestReviewsPtrOutput `pulumi:"requiredPullRequestReviews"`
	// Enforce restrictions for required status checks. See Required Status Checks below for details.
	RequiredStatusChecks BranchProtectionRequiredStatusChecksPtrOutput `pulumi:"requiredStatusChecks"`
	// Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
	Restrictions BranchProtectionRestrictionsPtrOutput `pulumi:"restrictions"`
}

// NewBranchProtection registers a new resource with the given unique name, arguments, and options.
func NewBranchProtection(ctx *pulumi.Context,
	name string, args *BranchProtectionArgs, opts ...pulumi.ResourceOption) (*BranchProtection, error) {
	if args == nil || args.Branch == nil {
		return nil, errors.New("missing required argument 'Branch'")
	}
	if args == nil || args.Repository == nil {
		return nil, errors.New("missing required argument 'Repository'")
	}
	if args == nil {
		args = &BranchProtectionArgs{}
	}
	var resource BranchProtection
	err := ctx.RegisterResource("github:index/branchProtection:BranchProtection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBranchProtection gets an existing BranchProtection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBranchProtection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BranchProtectionState, opts ...pulumi.ResourceOption) (*BranchProtection, error) {
	var resource BranchProtection
	err := ctx.ReadResource("github:index/branchProtection:BranchProtection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BranchProtection resources.
type branchProtectionState struct {
	// The Git branch to protect.
	Branch *string `pulumi:"branch"`
	// Boolean, setting this to `true` enforces status checks for repository administrators.
	EnforceAdmins *bool   `pulumi:"enforceAdmins"`
	Etag          *string `pulumi:"etag"`
	// The GitHub repository name.
	Repository *string `pulumi:"repository"`
	// Boolean, setting this to `true` requires all commits to be signed with GPG.
	RequireSignedCommits *bool `pulumi:"requireSignedCommits"`
	// Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
	RequiredPullRequestReviews *BranchProtectionRequiredPullRequestReviews `pulumi:"requiredPullRequestReviews"`
	// Enforce restrictions for required status checks. See Required Status Checks below for details.
	RequiredStatusChecks *BranchProtectionRequiredStatusChecks `pulumi:"requiredStatusChecks"`
	// Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
	Restrictions *BranchProtectionRestrictions `pulumi:"restrictions"`
}

type BranchProtectionState struct {
	// The Git branch to protect.
	Branch pulumi.StringPtrInput
	// Boolean, setting this to `true` enforces status checks for repository administrators.
	EnforceAdmins pulumi.BoolPtrInput
	Etag          pulumi.StringPtrInput
	// The GitHub repository name.
	Repository pulumi.StringPtrInput
	// Boolean, setting this to `true` requires all commits to be signed with GPG.
	RequireSignedCommits pulumi.BoolPtrInput
	// Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
	RequiredPullRequestReviews BranchProtectionRequiredPullRequestReviewsPtrInput
	// Enforce restrictions for required status checks. See Required Status Checks below for details.
	RequiredStatusChecks BranchProtectionRequiredStatusChecksPtrInput
	// Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
	Restrictions BranchProtectionRestrictionsPtrInput
}

func (BranchProtectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*branchProtectionState)(nil)).Elem()
}

type branchProtectionArgs struct {
	// The Git branch to protect.
	Branch string `pulumi:"branch"`
	// Boolean, setting this to `true` enforces status checks for repository administrators.
	EnforceAdmins *bool `pulumi:"enforceAdmins"`
	// The GitHub repository name.
	Repository string `pulumi:"repository"`
	// Boolean, setting this to `true` requires all commits to be signed with GPG.
	RequireSignedCommits *bool `pulumi:"requireSignedCommits"`
	// Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
	RequiredPullRequestReviews *BranchProtectionRequiredPullRequestReviews `pulumi:"requiredPullRequestReviews"`
	// Enforce restrictions for required status checks. See Required Status Checks below for details.
	RequiredStatusChecks *BranchProtectionRequiredStatusChecks `pulumi:"requiredStatusChecks"`
	// Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
	Restrictions *BranchProtectionRestrictions `pulumi:"restrictions"`
}

// The set of arguments for constructing a BranchProtection resource.
type BranchProtectionArgs struct {
	// The Git branch to protect.
	Branch pulumi.StringInput
	// Boolean, setting this to `true` enforces status checks for repository administrators.
	EnforceAdmins pulumi.BoolPtrInput
	// The GitHub repository name.
	Repository pulumi.StringInput
	// Boolean, setting this to `true` requires all commits to be signed with GPG.
	RequireSignedCommits pulumi.BoolPtrInput
	// Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
	RequiredPullRequestReviews BranchProtectionRequiredPullRequestReviewsPtrInput
	// Enforce restrictions for required status checks. See Required Status Checks below for details.
	RequiredStatusChecks BranchProtectionRequiredStatusChecksPtrInput
	// Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
	Restrictions BranchProtectionRestrictionsPtrInput
}

func (BranchProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*branchProtectionArgs)(nil)).Elem()
}

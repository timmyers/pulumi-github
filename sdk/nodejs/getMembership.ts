// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 * 
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 * 
 * const membershipForSomeUser = github.getMembership({
 *     username: "SomeUser",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-github/blob/master/website/docs/d/membership.html.markdown.
 */
export function getMembership(args: GetMembershipArgs, opts?: pulumi.InvokeOptions): Promise<GetMembershipResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("github:index/getmembership/getMembership:getMembership", {
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getMembership.
 */
export interface GetMembershipArgs {
    /**
     * The username to lookup in the organization.
     */
    readonly username: string;
}

/**
 * A collection of values returned by getMembership.
 */
export interface GetMembershipResult {
    /**
     * An etag representing the membership object.
     */
    readonly etag: string;
    /**
     * `admin` or `member` -- the role the user has within the organization.
     */
    readonly role: string;
    /**
     * The username.
     */
    readonly username: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}

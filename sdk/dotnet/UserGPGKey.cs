// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitHub
{
    /// <summary>
    /// Provides a GitHub user's GPG key resource.
    /// 
    /// This resource allows you to add/remove GPG keys from your user account.
    /// </summary>
    public partial class UserGPGKey : Pulumi.CustomResource
    {
        /// <summary>
        /// Your public GPG key, generated in ASCII-armored format.
        /// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
        /// </summary>
        [Output("armoredPublicKey")]
        public Output<string> ArmoredPublicKey { get; private set; } = null!;

        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The key ID of the GPG key, e.g. `3262EFF25BA0D270`
        /// </summary>
        [Output("keyId")]
        public Output<string> KeyId { get; private set; } = null!;


        /// <summary>
        /// Create a UserGPGKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserGPGKey(string name, UserGPGKeyArgs args, CustomResourceOptions? options = null)
            : base("github:index/userGPGKey:UserGPGKey", name, args ?? new UserGPGKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserGPGKey(string name, Input<string> id, UserGPGKeyState? state = null, CustomResourceOptions? options = null)
            : base("github:index/userGPGKey:UserGPGKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserGPGKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserGPGKey Get(string name, Input<string> id, UserGPGKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new UserGPGKey(name, id, state, options);
        }
    }

    public sealed class UserGPGKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Your public GPG key, generated in ASCII-armored format.
        /// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
        /// </summary>
        [Input("armoredPublicKey", required: true)]
        public Input<string> ArmoredPublicKey { get; set; } = null!;

        public UserGPGKeyArgs()
        {
        }
    }

    public sealed class UserGPGKeyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Your public GPG key, generated in ASCII-armored format.
        /// See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
        /// </summary>
        [Input("armoredPublicKey")]
        public Input<string>? ArmoredPublicKey { get; set; }

        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The key ID of the GPG key, e.g. `3262EFF25BA0D270`
        /// </summary>
        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        public UserGPGKeyState()
        {
        }
    }
}
